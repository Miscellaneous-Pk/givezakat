
<!DOCTYPE html>
<html lang="en" dir="ltr">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://fonts.googleapis.com/css?family=Montserrat:400,500,600,700,800,900&display=swap" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.3.1.min.js"  integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="  crossorigin="anonymous"></script>

    <link rel="stylesheet" href="/styles.css">

    <title>Zakat Lists</title>

    <style media="screen">
      .form-placement .active {
        outline: none;
        background: #173627;
        color: #FFFFFF !important;
      }

      .form-placement .active::after {
        color: white;
        font-size: 11px;
        padding: 4px 10px;
        background: #2e5743;
        margin-left: 8px;
        border-radius: 2%;
        content: 'Good!';
      }

      .custom-file-input {
        position: absolute;
        top: -1000px;
        width: 10px;
      }

      .file-Inp {
        display: block;
        width: fit-content;
        font-family: 'system-ui';
        color: rgba(0,0,0,0.25);
        /* pointer-events: none; */
      }

      .success {
        font-weight: bold !important;
        font-size: 15px !important;
        color: green !important;
        margin-top: 0.6rem !important;
      }

    </style>

  </head>
  <body>
    {{>header}}


    <div class="container form-placement">
      <h4>Add people</h4>
      <p class="input-heading">Add people in your neighbourhood who are rightfully Elegible for zakat. </p>
      {{#if token}}
      <button class="my-point5 btn btn-primary d-flex align-items-center" type="button" name="button" onclick="window.location.href = '/updateperson/Add+1+Person'">Add 1 Person</button>
      {{else}}
      <button class="my-point5 btn btn-primary d-flex align-items-center" type="button" name="button" onclick="window.location.href = '/signin/updateperson'">Add 1 Person</button>
      {{/if}}
      <span class="d-block divider-text">OR</span>
      <p class="input-heading mt-2">Add multiple people by uploading excel file.</p>
      <button onclick="window.location.href = '/sample.xlsx'" download class="mt-point5 btn btn-primary d-flex align-items-center" type="button" name="button">Download sample file here</button>
      <input type="file" class="custom-file-input" id="fileInp" aria-describedby="fileInp">
      <label change-state="false" class="file-Inp btn btn-primary my-point5" for="fileInp" data="{{sampleRows}}">Upload excel file</label>
      <div class="error d-none"></div>
      <button id="uploadData" class="my-point5 btn btn-primary d-flex align-items-center" type="button" name="button" disabled>Upload</button>
      <div class="error d-none"></div>
      <div class="success d-none"></div>

    </div>



    <script type="text/javascript" src="/javascript.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.8.0/jszip.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.8.0/xlsx.js"></script>

    <script type="text/javascript">
      $('.btn').on('click',function() {
        console.log($(this).attr('change-state'));
        if ($(this).attr('change-state')) return console.log('action pending');
        $(this).addClass('active').nextAll('.btn:first').attr({disabled: false}).css({color: 'rgba(0,0,0,0.85)', 'pointer-events': 'auto'});
      })

      function readURL(input) {

        return new Promise(function(resolve, reject) {

          if (input.files && input.files[0] && (/\.(xlsx)$/i.test(input.files[0].name))) {

              var reader = new FileReader();

              reader.addEventListener("load", function(e) {

                var data = e.target.result;
                var workbook = XLSX.read(data, {
                  type: 'binary'
                });

                workbook.SheetNames.forEach(function(sheetName) {
                  var XL_row_object = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);
                  resolve(XL_row_object);
                })

              });

              reader.onerror = function(ex) {
                reject(ex);
              };

              reader.readAsBinaryString(input.files[0]);

          } else {
              reject('not proper format of file');
          }

        });

      }

      let uploadedData = [];

      $("#fileInp").change(function() {
        let dataLength = $(this).siblings('label').attr('data').split(',').length;
        let sampleFormat = $(this).siblings('label').attr('data').split(',');
        let inputFormat = [];
        let incomplete = [];
        readURL(this).then((msg) => {
          if (msg.length < 1) incomplete.push(`No data added <br>`);
          $.each(msg, (key,val) => {
            inputFormat = Object.getOwnPropertyNames(val);
            let count = 0;
            for (i in val) {
                if (val.hasOwnProperty(i)) {
                    count++; // TEST 2: NO ENTRY IS MISSING
                }
            }
            if (count < dataLength) return incomplete.push(`Missing Entries: Entry ${key} - ${val.Name || val.name} <br>`);
            if (count > dataLength) return incomplete.push(`Additional Entries: Entry ${key} - ${val.Name || val.name} <br>`);
            if ($(sampleFormat).not(inputFormat).length != 0 && $(inputFormat).not(sampleFormat).length != 0) return incomplete.push(`Wrong Format: Entry ${key} - ${val.Name || val.name} <br>`) // TEST 1: KEYS ARE OF SAMPLE FORMAT
          })
          if (incomplete.length) {
            uploadedData = '';
            return $(this).nextAll('.error:first').removeClass('d-none').html(`Error at following entries:- <br> ${JSON.stringify(incomplete).substr(1).slice(0, -1).replace(/,|"/g,'')}`);
          }
          // DATA IS OK MAPPING ONTO FORMAT FOR PROPER ENTRY IN DATABASE
          $.each(msg, (key,val) => {
            uploadedData[key] = {
              name: val["Name"],
              mob: `+92`+val["Mobile No"].replace(/^0|-| /g,''),
              occupation: val["Occupation"],
              salary: val["Earning per month"],
              currency: val["Currency"],
              fMembers: val["Family Members"],
              address: val["Address"],
              story: val["Story"]
            }
          })
          console.log(uploadedData);
          $('#uploadData').attr({disabled:false});
          $(this).nextAll('.error:first').addClass('d-none');
          $(this).siblings('label').html('All entries are valid.').attr({'change-state':true}).addClass('active').nextAll('.btn:first').attr({disabled: false});
        }).catch((e) => {
          console.log(e);
          return $(this).nextAll('.error:first').removeClass('d-none').html(e);
        });
      });

      $('#uploadData').on('click',function() {
        if (uploadedData.length < 1) return console.log('no file added');
        $('.upload-msgs').children().addClass('d-none');
        data = JSON.stringify(uploadedData);
        console.log(data);
        $.ajax({
            url: '/excelData',
            type: 'post',
            data: data,
            headers: {
                'content-type': 'application/json',
            }
          }).done((res) => {
            console.log(res);
            $(this).nextAll('.success:first').removeClass('d-none').html(`
              New added: ${res.nUpserted + res.nInserted} <br>
              Old matched : ${res.nMatched} <br>
              Old modified: ${res.nModified}
              `);
          }).fail((e) => {
            let errorMsg = '';
            $.each(JSON.parse(e.responseText),(key,val) => {
              errorMsg += val + '<br>'
            })
            $(this).nextAll('.error:first').removeClass('d-none').html(errorMsg);
          });

      });

    </script>

  </body>
</html>
