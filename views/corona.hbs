<!DOCTYPE html>
<html>
  <head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <title>Corona Dashboard for Pakistan</title>

    <!-- Primary Meta Tags -->
    <meta name="title" content="Corona Dashboard for Pakistan">
    <meta name="description" content="Get city wise data of corona patients in Pakistan.">

    <link href="https://fonts.googleapis.com/css?family=Montserrat|Roboto:100,300i,400,400i,700,900&display=swap" rel="stylesheet">
    <style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        height: 100%;
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }

      .out {
        width: 233px;
        display: flex;
        flex-wrap: wrap;
        margin-bottom: 7px;
        background: #ffffff;
        font-family: Roboto;
        color: #4F4F4F;
        padding: 8px 4px 0 4px;
        box-sizing: border-box;
        /* border: 1px solid #adadad; */
        position: absolute;
        right: 7px;
        top: 5px;
        align-items: center;
        justify-content: center;
      }

      .card {
        width: 216px;
        display: flex;
        flex-wrap: wrap;
        margin-bottom: 7px;
        background: #ffffff;
        /* box-shadow: 2px 2px 0px rgba(0, 0, 0, 0.25); */
        font-family: Roboto;
        color: #4F4F4F;
        padding: 4px 8px;
        box-sizing: border-box;
        border: 1px solid #ededed;
      }

      .card > p:nth-child(1) {
        width: 100%;
        font-style: normal;
        font-weight: 500;
        font-size: 16px;
        /* line-height: 35px; */
        margin: 0px;
      }

      .card > p:nth-child(1) > span {
        display: none;
      }

      .card > p:nth-child(1) > a, .card > p:nth-child(1) > b {
        text-decoration: none;
        color: inherit;
        font-weight: normal;
      }

      .card > p:not(:nth-child(1)) {
        font-weight: normal;
        margin-right: 1rem;
        padding: 2px 4px;
        margin-bottom: 0;
        display: flex;
        background: #f3f3f3;
        font-size: 15px;
        min-width: 37px;
        text-align: center;
      }

      .card span {
        font-size: 12px;
        display: inline-flex;
        margin-top: 0px;
        padding-left: 4px;
        font-weight: bold;
      }

      .out .btns {
        display: flex;
        align-items: center;
        justify-content: space-around;
        font-size: 70%;
        padding-left: 2px;
      }

      .out a {
        padding: 2px 7px;
        text-decoration: none;
        color: black;
        margin-bottom: 6px;
        margin-right: 2px;
        background: #efe3e3;
        box-sizing: border-box;
        white-space: nowrap;
      }

      .out a:hover {
        opacity: 0.7;
      }

      .out a.true {
        background: #ffc2c2;
        font-weight: bold;
      }

      @media (max-width: 700px) {
        #map {
          position: fixed !important;
          overflow: hidden;
          top: 0;
          left: 0;
          width: 100vw;
          height: 100vh;
          box-sizing: border-box;
        }

        .out {
          position: absolute;
          top: 89%;
          margin: 0px;
        }

        .card {
          width: 100%;
        }
      }
    </style>
  </head>
  <body>
    <div id="map"></div>
    <div class="out">
      <div class="btns">
        <a class="{{cases}}" href="/covid19?type=cases">Cases (C)</a>
        <a class="{{deaths}}" href="/covid19?type=deaths">Deaths (D)</a>
        <a class="{{rec}}" href="/covid19?type=rec">Recoveries (R)</a>
      </div>
      {{#each out.[locations]}}
        <div class="card">
          <p>{{{this.[0]}}}</p>
          <p>
            {{{this.[1]}}}
            <span>C</span>
          </p>
          <p>
            {{{this.[2]}}}
            <span>D</span>
          </p>
          <p>
            {{{this.[3]}}}
            <span>R</span>
          </p>
        </div>
      {{/each}}
    </div>
    <script>

      function initMap() {

        var map = new google.maps.Map(document.getElementById('map'), {
          zoom: 6,
          center:   {lat: 31.1704, lng: 72.7097}
        });

        // Create an array of alphabetical characters used to label the markers.
        var labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';

        // Add some markers to the map.
        // Note: The code uses the JavaScript Array.prototype.map() method to
        // create an array of markers based on a given "locations" array.
        // The map() method here has nothing to do with the Google Maps API.
        var markers = locations.map(function(location, i) {
          return new google.maps.Marker({
            position: location,
            label: labels[i % labels.length]
          });
        });

        // Add a marker clusterer to manage the markers.
        var markerCluster = new MarkerClusterer(map, markers,
            {imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'});
      }
      var locations = [
        {{#each out.data}}
          {
            "lat": {{this.lat}},
            "lng": {{this.lng}}
          },
        {{/each}}
      ]


    </script>
    <!-- Replace following script src -->
    <script src="https://unpkg.com/@google/markerclustererplus@4.0.1/dist/markerclustererplus.min.js">
    </script>
    <script async defer
    src="https://maps.googleapis.com/maps/api/js?key={{MAP_API_KEY}}&callback=initMap">
    </script>
  </body>
</html>
